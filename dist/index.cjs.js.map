{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["/**\n * A Named Promise Task \n * Insipre from https://stackoverflow.com/questions/53540348/js-async-await-tasks-queue\n */\nclass PromiseTask {\n  constructor ( context, namedWorkers ) {\n    this._context = context\n    this._namedWorkers = namedWorkers\n    this._pending = Promise.resolve();\n  }\n  // task executor\n  addTask = ( () => {\n    let pending = Promise.resolve();\n\n    const run = async ( name, ...values ) => {\n      try {\n        await pending;\n      } finally {\n        return this._namedWorkers[ name ].call(this._context, ...values );\n      }\n    }\n\n    // update pending promise so that next task could await for it\n    return ( name, ...values ) => ( pending = run( name, ...values ) )\n  } )()\n}\n\nexport default PromiseTask\n"],"names":["PromiseTask","constructor","context","namedWorkers","pending","Promise","resolve","run","name","values","_namedWorkers","call","_context","_pending"],"mappings":";;;;;;AAAA;;;;AAIA,MAAMA,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAAGC,OAAH,EAAYC,YAAZ,EAA2B;AAAA,qCAM5B,CAAE,MAAM;AAChB,UAAIC,OAAO,GAAGC,OAAO,CAACC,OAAR,EAAd;;AAEA,YAAMC,GAAG,GAAG,OAAQC,IAAR,EAAc,GAAGC,MAAjB,KAA6B;AACvC,YAAI;AACF,gBAAML,OAAN;AACD,SAFD,SAEU;AACR,iBAAO,KAAKM,aAAL,CAAoBF,IAApB,EAA2BG,IAA3B,CAAgC,KAAKC,QAArC,EAA+C,GAAGH,MAAlD,CAAP;AACD;AACF,OAND,CAHgB;;;AAYhB,aAAO,CAAED,IAAF,EAAQ,GAAGC,MAAX,KAAyBL,OAAO,GAAGG,GAAG,CAAEC,IAAF,EAAQ,GAAGC,MAAX,CAA7C;AACD,KAbS,GAN4B;;AACpC,SAAKG,QAAL,GAAgBV,OAAhB;AACA,SAAKQ,aAAL,GAAqBP,YAArB;AACA,SAAKU,QAAL,GAAgBR,OAAO,CAACC,OAAR,EAAhB;AACD,GALe;;;AAAA;;;;"}