{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["/**\n * A Named Promise Task \n * Insipre from https://stackoverflow.com/questions/53540348/js-async-await-tasks-queue\n */\nclass PromiseTask {\n  constructor ( context, namedWorkers ) {\n    this._context = context\n    this._namedWorkers = namedWorkers\n    this._pending = Promise.resolve();\n  }\n  // task executor\n  addTask = ( () => {\n    let pending = Promise.resolve();\n\n    const run = async ( name, ...values ) => {\n      try {\n        await pending;\n      } finally {\n        return this._namedWorkers[ name ].call(this._context, ...values );\n      }\n    }\n\n    // update pending promise so that next task could await for it\n    return ( name, ...values ) => ( pending = run( name, ...values ) )\n  } )()\n}\n\nexport default PromiseTask\n"],"names":["PromiseTask","context","namedWorkers","pending","Promise","resolve","run","name","values","_namedWorkers","call","_context","_pending"],"mappings":";;;;;AAAA;;;;IAIMA,cACJ,qBAAcC,OAAd,EAAuBC,YAAvB,EAAsC;AAAA;;AAAA;;AAAA,mCAM1B,YAAM;AAChB,QAAIC,OAAO,GAAGC,OAAO,CAACC,OAAR,EAAd;;AAEA,QAAMC,GAAG;AAAA,0EAAG,iBAAQC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEFJ,OAFE;;AAAA;AAAA;;AAAA,0CAAiBK,MAAjB;AAAiBA,kBAAAA,MAAjB;AAAA;;AAAA,iDAID,yBAAA,KAAI,CAACC,aAAL,CAAoBF,IAApB,GAA2BG,IAA3B,+BAAgC,KAAI,CAACC,QAArC,SAAkDH,MAAlD,EAJC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAHF,GAAG;AAAA;AAAA;AAAA,OAAT,CAHgB;;;AAYhB,WAAO,UAAEC,IAAF;AAAA,yCAAWC,MAAX;AAAWA,QAAAA,MAAX;AAAA;;AAAA,aAAyBL,OAAO,GAAGG,GAAG,MAAH,UAAKC,IAAL,SAAcC,MAAd,EAAnC;AAAA,KAAP;AACD,GAbS,EAN4B;;AACpC,OAAKG,QAAL,GAAgBV,OAAhB;AACA,OAAKQ,aAAL,GAAqBP,YAArB;AACA,OAAKU,QAAL,GAAgBR,OAAO,CAACC,OAAR,EAAhB;AACD;;;"}