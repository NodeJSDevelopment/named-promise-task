{"version":3,"file":"index.esm.js","sources":["../src/index.js"],"sourcesContent":["/**\n * A Named Promise Task\n * Inspire from https://stackoverflow.com/questions/53540348/js-async-await-tasks-queue\n */\nimport { EventEmitter } from 'eventemitter3'\n\nexport class PromiseTask extends EventEmitter {\n  constructor (context, namedWorkers) {\n    super()\n    this._context = context\n    this._namedWorkers = namedWorkers\n    this._pending = Promise.resolve()\n    this._size = 0\n    this._name = null\n  }\n\n  // task queue size\n  get size () {\n    return this._size\n  }\n\n  // checking is running\n  get isRunning () {\n    return this._size !== 0\n  }\n\n  // current task name\n  get currentTaskName () {\n    return this._name\n  }\n  \n  // task executor\n  addTask = (() => {\n    let pending = Promise.resolve()\n\n    const run = async (name, ...values) => {\n      try {\n        await pending\n      } finally {\n        this._name = name\n        return Promise.resolve(this._namedWorkers[name].call(this._context, ...values)).finally(() => {\n          this._size--\n          if (this._size === 0) {\n            this._name = null\n            this.emit('stop')\n          }\n        })\n      }\n    }\n\n    // update pending promise so that next task could await for it\n    return (name, ...values) => {\n      this._size++\n      if (this._size === 1) {\n        this._name = name\n        this.emit('start')\n      }\n      return (pending = run(name, ...values))\n    }\n  })()\n}\n\n"],"names":["PromiseTask","context","namedWorkers","pending","Promise","resolve","run","name","_name","values","_namedWorkers","call","_context","_size","emit","_pending","EventEmitter"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;IAGaA;;;;;AACX,uBAAaC,OAAb,EAAsBC,YAAtB,EAAoC;AAAA;;AAAA;;AAClC;;AADkC,8DAyBzB,YAAM;AACf,UAAIC,OAAO,GAAGC,OAAO,CAACC,OAAR,EAAd;;AAEA,UAAMC,GAAG;AAAA,4EAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEFJ,OAFE;;AAAA;AAAA;AAIR,wBAAKK,KAAL,GAAaD,IAAb;;AAJQ,4CAAgBE,MAAhB;AAAgBA,oBAAAA,MAAhB;AAAA;;AAAA,mDAKDL,OAAO,CAACC,OAAR,CAAgB,+BAAKK,aAAL,CAAmBH,IAAnB,GAAyBI,IAAzB,+BAA8B,MAAKC,QAAnC,SAAgDH,MAAhD,EAAhB,aAAiF,YAAM;AAC5F,0BAAKI,KAAL;;AACA,wBAAI,MAAKA,KAAL,KAAe,CAAnB,EAAsB;AACpB,4BAAKL,KAAL,GAAa,IAAb;;AACA,4BAAKM,IAAL,CAAU,MAAV;AACD;AACF,mBANM,CALC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAHR,GAAG;AAAA;AAAA;AAAA,SAAT,CAHe;;;AAmBf,aAAO,UAACC,IAAD,EAAqB;AAC1B,cAAKM,KAAL;;AACA,YAAI,MAAKA,KAAL,KAAe,CAAnB,EAAsB;AACpB,gBAAKL,KAAL,GAAaD,IAAb;;AACA,gBAAKO,IAAL,CAAU,OAAV;AACD;;AALyB,2CAAXL,MAAW;AAAXA,UAAAA,MAAW;AAAA;;AAM1B,eAAQN,OAAO,GAAGG,GAAG,MAAH,UAAIC,IAAJ,SAAaE,MAAb,EAAlB;AACD,OAPD;AAQD,KA3BS,EAzB0B;;AAElC,UAAKG,QAAL,GAAgBX,OAAhB;AACA,UAAKS,aAAL,GAAqBR,YAArB;AACA,UAAKa,QAAL,GAAgBX,OAAO,CAACC,OAAR,EAAhB;AACA,UAAKQ,KAAL,GAAa,CAAb;AACA,UAAKL,KAAL,GAAa,IAAb;AANkC;AAOnC;;;;;SAGD,eAAY;AACV,aAAO,KAAKK,KAAZ;AACD;;;;SAGD,eAAiB;AACf,aAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;;SAGD,eAAuB;AACrB,aAAO,KAAKL,KAAZ;AACD;;;;;EAvB8BQ;;"}